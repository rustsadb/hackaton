---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/projects":
    post:
      summary: Create project
      tags:
      - Projects
      parameters: []
      responses:
        '200':
          description: project created
        '422':
          description: params error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: lol
              required:
              - name
  "/api/projects/{id}":
    delete:
      summary: Delete project
      tags:
      - Projects
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: stage deleted
        '404':
          description: not found
  "/api/stages":
    post:
      summary: Create stages
      tags:
      - Stages
      parameters: []
      responses:
        '200':
          description: project created
        '422':
          description: params error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: lol
                project_id:
                  type: integer
                  example: 1
              required:
              - name
              - project_id
  "/api/stages/{id}":
    delete:
      summary: Delete stage
      tags:
      - Stages
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: stage deleted
        '404':
          description: not found
  "/api/tasks":
    post:
      summary: Create task
      tags:
      - Tasks
      parameters: []
      responses:
        '200':
          description: project created
        '422':
          description: params error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: lol
                project_id:
                  type: integer
                  example: 1
                description:
                  type: string
                  example: lol
                deadline:
                  type: string
                  example: 12-22-2000
                important:
                  type: string
                  example: 1
              required:
              - name
              - project_id
  "/api/users":
    post:
      summary: Create user
      tags:
      - User registration
      parameters: []
      responses:
        '200':
          description: user created
        '422':
          description: params error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: integer
                  example: 79781234567
              required:
              - phone_number
  "/api/sessions":
    post:
      summary: Login user
      tags:
      - User login
      parameters: []
      responses:
        '200':
          description: user logged in
        '401':
          description: auth error
        '422':
          description: record not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: integer
                  example: 79781234567
                password:
                  type: string
                  example: my_password
              required:
              - phone_number
              - password
  "/api/registration_complete":
    post:
      summary: Complete user registration
      tags:
      - User registration
      parameters: []
      responses:
        '200':
          description: user registred
        '422':
          description: params error
        '404':
          description: user not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                avatar_id:
                  type: integer
                phone_number:
                  type: integer
                  example: 79781234567
                password:
                  type: string
                  example: my_password
                name:
                  type: string
                  example: Danil
                email:
                  type: string
                  example: Test@mail.ru
                gender:
                  type: string
                  example: female
              required:
              - phone_number
              - password, name
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
servers:
- url: http://localhost:3000
  variables:
    defaultHost:
      default: http://localhost:3000
